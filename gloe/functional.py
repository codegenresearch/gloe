import inspect\nfrom typing import Callable, TypeVar, Generic\n\nA = TypeVar('A')\nS = TypeVar('S')\n\nclass _PartialTransformer(Generic[A, S]):\n    def __init__(self, func: Callable[[A], S]):\n        self.func = func\n\n    def __call__(self, *args, **kwargs) -> Transformer[A, S]:\n        func = self.func\n        func_signature = inspect.signature(func)\n\n        class LambdaTransformer(Transformer[A, S]):\n            def signature(self) -> inspect.Signature:\n                return func_signature\n\n            def transform(self, data: A) -> S:\n                return func(data, *args, **kwargs)\n\n        lambda_transformer = LambdaTransformer()\n        lambda_transformer.__class__.__name__ = func.__name__\n        lambda_transformer._label = func.__name__\n        return lambda_transformer\n\ndef partial_transformer(func: Callable[[A], S]) -> _PartialTransformer[A, S]:\n    return _PartialTransformer(func)\n